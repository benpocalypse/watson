#!/usr/bin/env bash

######################################################################
#
# Watson version 1.0
#
# “It’s elementary, my dear…”
#
# Helps you set up your new elementary OS Vala app.
#
# For details, please see:
# https://github.com/small-tech/watson
#
# Follows the Community Bash Style Guide.
# https://github.com/azet/community_bash_style_guide
#
# Copyright ⓒ 2021-present Aral Balkan (https://ar.al)
# Small Technology Foundation (https://small-tech.org)
#
# Like this? Fund us!
# https://small-tech.org/fund-us
#
# Released under GNU GPL version 3.0.
#
######################################################################

set -eu -o pipefail

# Constants

readonly copyright_year=$(date '+%Y')

# Github details.
github_details_pipe_separated=$(zenity --forms --title="Watson: GitHub Details" --text="\n    Enter your GitHub organisation and app from your GitHub URL.    \n\n    https://github.com/‹Organisaton›/‹App›" --add-entry="Organisation:" --add-entry="App:")

# Get app details (1/2).
app_details_pipe_separated=$(zenity --forms --title="Watson: App Details (1/2)" --text="\n    These details are used to customise several files in your project.    " --add-entry="Name:" --add-entry="Generic Name (e.g., Web Browser):" --add-entry="Description" --add-entry="Tooltip text (comment)" --add-entry="Keywords (separated;by;semicolons)")

# Get app details (2/2) – categories (multi-select list).
app_categories=$(zenity --list --multiple --separator=";" --title="Watson: App Details (2/2)" --text="\n    Choose the category(ies) your app falls into.    " --column="Category" "AudioVideo" "Audio" "Video" "Development" "Education" "Game" "Graphics" "Network" "Office" "Science" "Settings" "System" "Utility")

# Get copyright details.
copyright_details_pipe_separated=$(zenity --forms --title="Watson: Copyright details)" --text="\n    Please enter your details for the copyright message.    " --add-entry="Name" --add-entry="Email")

# Parse the pipe-separated results returned from the Zenity dialogues into bash arrays.
IFS='|' read -ra github_details <<< "${github_details_pipe_separated}"
IFS='|' read -ra app_details <<< "${app_details_pipe_separated}"
IFS='|' read -ra copyright_details <<< "${copyright_details_pipe_separated}"

# We replace any dashes in the desktop entry names with underscores for
# compatibility with D-Bus names. See:
# https://specifications.freedesktop.org/desktop-entry-spec/latest/ar01s02.html
#
# TODO: Also handle edge case of names that begin with numbers? (Prefix with an underscore.)
github_organisation=${github_details[0]//'-'/'_'}
github_app=${github_details[1]//'-'/'_'}

app_name=${app_details[0]}
app_generic_name=${app_details[1]}
app_description=${app_details[2]}
app_comment=${app_details[3]}
app_keywords=${app_details[4]}

copyright_name=${copyright_details[0]}
copyright_email=${copyright_details[1]}

echo "Organisation: ${github_organisation}"
echo "App: ${github_app}"
echo "App name: ${app_name}"
echo "App generic name: ${app_generic_name}"
echo "App description: ${app_description}"
echo "App tool-tip text (comment): ${app_comment}"
echo "App category(ies): ${app_categories}"
echo "App keywords: ${app_keywords}"
echo "Copyright name: ${copyright_name}"
echo "Copyright email ${copyright_email}"

# This is the list of files to carry out substituions in.
files=('com.github.ORG.APP.yml' 'meson.build' 'src/Application.vala' 'data/APP.appdata.xml.in' 'data/APP.desktop.in' 'data/gresource.xml' 'data/gschema.xml' 'po/POTFILES')

# Carry out substitutions in configuration files and source code.
for file in "${files[@]}"; do
  sed -i "s/{GITHUB.ORG}/${github_organisation}/g" "${file}"
  sed -i "s/{GITHUB.APP}/${github_app}/g" "${file}"
  sed -i "s/{APP.NAME}/${app_name}/g" "${file}"
  sed -i "s/{APP.GENERIC_NAME}/${app_generic_name}/g" "${file}"
  sed -i "s/{APP.DESCRIPTION}/${app_description}/g" "${file}"
  sed -i "s/{APP.COMMENT}/${app_comment}/g" "${file}"
  sed -i "s/{APP.CATEGORIES}/${app_categories}/g" "${file}"
  sed -i "s/{APP.KEYWORDS}/${app_keywords}/g" "${file}"
  sed -i "s/{COPYRIGHT.YEAR}/${copyright_year}/g" "${file}"
  sed -i "s/{COPYRIGHT.NAME}/${copyright_name}/g" "${file}"
  sed -i "s/{COPYRIGHT.EMAIL}/${copyright_email}/g" "${file}"
done

# Rename files.
# TODO

# Delete git repository.
# TODO

# Initialise new git repository, set its remote, and make an initial commit.
# TODO
